"use client";

import { Container } from "@/components/Container";
import s from "./FaqSection.module.css";
import { Accordion } from "@/components/Accordion/Accordion";
import { useState } from "react";

export const faqData = [
  {
    id: 1,
    question: "Яка вартість послуг?",
    answer:
      "Вартість підбору няні залежить від складності запиту та тривалості співпраці. У середньому – від 2000 до 5000 грн.",
  },
  {
    id: 2,
    question: "Скільки часу займає підбір няні?",
    answer:
      "Перші кандидати зазвичай надсилаються протягом 1-2 днів після заповнення анкети. Повний підбір займає до 5 робочих днів.",
  },
  {
    id: 3,
    question: "Чи можна замовити няню на конкретний день і час?",
    answer:
      "Так, ми можемо підібрати няню під конкретну дату та години, зокрема для разових випадків або вечірок.",
  },
  {
    id: 4,
    question: "У яких випадках повертається передоплата?",
    answer:
      "Передоплата повертається, якщо агентство не змогло запропонувати жодного релевантного кандидата протягом обумовленого терміну.",
  },
  {
    id: 5,
    question: "Як ви перевіряєте нянь?",
    answer:
      "Усі няні проходять співбесіду, перевірку рекомендацій та базову психологічну оцінку. Також ми перевіряємо документи та досвід.",
  },
  {
    id: 6,
    question: "Як відбувається оплата за підбір няні?",
    answer:
      "Після погодження кандидата ви оплачуєте послугу агентства. Оплата можлива онлайн або за реквізитами.",
  },
  {
    id: 7,
    question: "Що робити, якщо няня нам не підійшла?",
    answer:
      "У разі, якщо няня вам не підходить, ми продовжимо підбір і безкоштовно запропонуємо заміну.",
  },
  {
    id: 8,
    question: "Чи можна обрати кількох кандидатів?",
    answer:
      "Так, ми надсилаємо кілька профілів нянь, щоб ви могли порівняти досвід, вартість та обрати найкращу кандидатуру.",
  },
];

export const FaqSection = ({ nannys }: { nannys?: boolean }) => {
  const [openId, setOpenId] = useState<number | null>(null);

  const toggle = (id: number) => {
    setOpenId((prev) => (prev === id ? null : id));
  };

  return (
    <section className={s.section}>
      <Container>
        <h2 className={s.title}>
          Часті питання
          <span>
            {" "}
            {nannys ? "від нянь" : "від батьків"} {line}
          </span>
        </h2>

        <ul className={s.faqList}>
          {faqData.map((item) => (
            <li key={item.id}>
              <Accordion
                id={item.id}
                isOpen={openId === item.id}
                onToggle={toggle}
                title={item.question}
                faq={true}
              >
                <p>{item.answer}</p>
              </Accordion>
            </li>
          ))}
        </ul>
      </Container>
    </section>
  );
};

const line = (
  <svg viewBox="0 0 245 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M1.5 15.5938C2.06509 12.3212 11.8317 10.1408 15.3354 9.29538C23.1125 7.41876 29.0323 4.44253 37.4435 4.44253C42.5535 4.44253 64.1342 1.13116 53.1331 7.5424C50.2983 9.19443 50.2955 8.27138 48.8315 10.126C46.8262 12.6664 50.4638 10.7979 52.7539 10.5906C64.0559 9.56794 73.7862 9.8962 85.2254 9.19443C103.741 8.05852 124.452 10.3149 142.714 7.85015C156.396 6.00349 170.722 6.14857 184.34 4.44244C193.362 3.31199 202.462 1.86114 211.654 1.86114C214.69 1.86114 222.109 0.554059 221.852 3.71968C221.712 5.44573 214.248 7.7148 212.224 8.36602C209.993 9.08402 198.298 12.0831 202.597 12.0831C221.904 12.0831 224.589 11.8486 243.5 9.19443"
      stroke="#FF91B2"
      strokeWidth="3"
      strokeLinecap="round"
    />
  </svg>
);
